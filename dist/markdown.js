!function(){var e={103:function(e,t,n){var a=function(e){var t=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,n=0,a={},r={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function e(t){return t instanceof i?new i(t.type,e(t.content),t.alias):Array.isArray(t)?t.map(e):t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++n}),e.__id},clone:function e(t,n){var a,i;switch(n=n||{},r.util.type(t)){case"Object":if(i=r.util.objId(t),n[i])return n[i];for(var s in a={},n[i]=a,t)t.hasOwnProperty(s)&&(a[s]=e(t[s],n));return a;case"Array":return i=r.util.objId(t),n[i]?n[i]:(a=[],n[i]=a,t.forEach((function(t,r){a[r]=e(t,n)})),a);default:return t}},getLanguage:function(e){for(;e;){var n=t.exec(e.className);if(n)return n[1].toLowerCase();e=e.parentElement}return"none"},setLanguage:function(e,n){e.className=e.className.replace(RegExp(t,"gi"),""),e.classList.add("language-"+n)},currentScript:function(){if("undefined"==typeof document)return null;if("currentScript"in document)return document.currentScript;try{throw new Error}catch(a){var e=(/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(a.stack)||[])[1];if(e){var t=document.getElementsByTagName("script");for(var n in t)if(t[n].src==e)return t[n]}return null}},isActive:function(e,t,n){for(var a="no-"+t;e;){var r=e.classList;if(r.contains(t))return!0;if(r.contains(a))return!1;e=e.parentElement}return!!n}},languages:{plain:a,plaintext:a,text:a,txt:a,extend:function(e,t){var n=r.util.clone(r.languages[e]);for(var a in t)n[a]=t[a];return n},insertBefore:function(e,t,n,a){var i=(a=a||r.languages)[e],s={};for(var o in i)if(i.hasOwnProperty(o)){if(o==t)for(var l in n)n.hasOwnProperty(l)&&(s[l]=n[l]);n.hasOwnProperty(o)||(s[o]=i[o])}var c=a[e];return a[e]=s,r.languages.DFS(r.languages,(function(t,n){n===c&&t!=e&&(this[t]=s)})),s},DFS:function e(t,n,a,i){i=i||{};var s=r.util.objId;for(var o in t)if(t.hasOwnProperty(o)){n.call(t,o,t[o],a||o);var l=t[o],c=r.util.type(l);"Object"!==c||i[s(l)]?"Array"!==c||i[s(l)]||(i[s(l)]=!0,e(l,n,o,i)):(i[s(l)]=!0,e(l,n,null,i))}}},plugins:{},highlightAll:function(e,t){r.highlightAllUnder(document,e,t)},highlightAllUnder:function(e,t,n){var a={callback:n,container:e,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};r.hooks.run("before-highlightall",a),a.elements=Array.prototype.slice.apply(a.container.querySelectorAll(a.selector)),r.hooks.run("before-all-elements-highlight",a);for(var i,s=0;i=a.elements[s++];)r.highlightElement(i,!0===t,a.callback)},highlightElement:function(t,n,a){var i=r.util.getLanguage(t),s=r.languages[i];r.util.setLanguage(t,i);var o=t.parentElement;o&&"pre"===o.nodeName.toLowerCase()&&r.util.setLanguage(o,i);var l={element:t,language:i,grammar:s,code:t.textContent};function c(e){l.highlightedCode=e,r.hooks.run("before-insert",l),l.element.innerHTML=l.highlightedCode,r.hooks.run("after-highlight",l),r.hooks.run("complete",l),a&&a.call(l.element)}if(r.hooks.run("before-sanity-check",l),(o=l.element.parentElement)&&"pre"===o.nodeName.toLowerCase()&&!o.hasAttribute("tabindex")&&o.setAttribute("tabindex","0"),!l.code)return r.hooks.run("complete",l),void(a&&a.call(l.element));if(r.hooks.run("before-highlight",l),l.grammar)if(n&&e.Worker){var u=new Worker(r.filename);u.onmessage=function(e){c(e.data)},u.postMessage(JSON.stringify({language:l.language,code:l.code,immediateClose:!0}))}else c(r.highlight(l.code,l.grammar,l.language));else c(r.util.encode(l.code))},highlight:function(e,t,n){var a={code:e,grammar:t,language:n};if(r.hooks.run("before-tokenize",a),!a.grammar)throw new Error('The language "'+a.language+'" has no grammar.');return a.tokens=r.tokenize(a.code,a.grammar),r.hooks.run("after-tokenize",a),i.stringify(r.util.encode(a.tokens),a.language)},tokenize:function(e,t){var n=t.rest;if(n){for(var a in n)t[a]=n[a];delete t.rest}var r=new l;return c(r,r.head,e),o(e,r,t,r.head,0),function(e){for(var t=[],n=e.head.next;n!==e.tail;)t.push(n.value),n=n.next;return t}(r)},hooks:{all:{},add:function(e,t){var n=r.hooks.all;n[e]=n[e]||[],n[e].push(t)},run:function(e,t){var n=r.hooks.all[e];if(n&&n.length)for(var a,i=0;a=n[i++];)a(t)}},Token:i};function i(e,t,n,a){this.type=e,this.content=t,this.alias=n,this.length=0|(a||"").length}function s(e,t,n,a){e.lastIndex=t;var r=e.exec(n);if(r&&a&&r[1]){var i=r[1].length;r.index+=i,r[0]=r[0].slice(i)}return r}function o(e,t,n,a,l,g){for(var d in n)if(n.hasOwnProperty(d)&&n[d]){var p=n[d];p=Array.isArray(p)?p:[p];for(var f=0;f<p.length;++f){if(g&&g.cause==d+","+f)return;var h=p[f],m=h.inside,y=!!h.lookbehind,v=!!h.greedy,b=h.alias;if(v&&!h.pattern.global){var x=h.pattern.toString().match(/[imsuy]*$/)[0];h.pattern=RegExp(h.pattern.source,x+"g")}for(var k=h.pattern||h,F=a.next,w=l;F!==t.tail&&!(g&&w>=g.reach);w+=F.value.length,F=F.next){var A=F.value;if(t.length>e.length)return;if(!(A instanceof i)){var T,L=1;if(v){if(!(T=s(k,w,e,y))||T.index>=e.length)break;var M=T.index,E=T.index+T[0].length,H=w;for(H+=F.value.length;M>=H;)H+=(F=F.next).value.length;if(w=H-=F.value.length,F.value instanceof i)continue;for(var $=F;$!==t.tail&&(H<E||"string"==typeof $.value);$=$.next)L++,H+=$.value.length;L--,A=e.slice(w,H),T.index-=w}else if(!(T=s(k,0,A,y)))continue;M=T.index;var S=T[0],C=A.slice(0,M),j=A.slice(M+S.length),_=w+A.length;g&&_>g.reach&&(g.reach=_);var N=F.prev;if(C&&(N=c(t,N,C),w+=C.length),u(t,N,L),F=c(t,N,new i(d,m?r.tokenize(S,m):S,b,S)),j&&c(t,F,j),L>1){var O={cause:d+","+f,reach:_};o(e,t,n,F.prev,w,O),g&&O.reach>g.reach&&(g.reach=O.reach)}}}}}}function l(){var e={value:null,prev:null,next:null},t={value:null,prev:e,next:null};e.next=t,this.head=e,this.tail=t,this.length=0}function c(e,t,n){var a=t.next,r={value:n,prev:t,next:a};return t.next=r,a.prev=r,e.length++,r}function u(e,t,n){for(var a=t.next,r=0;r<n&&a!==e.tail;r++)a=a.next;t.next=a,a.prev=t,e.length-=r}if(e.Prism=r,i.stringify=function e(t,n){if("string"==typeof t)return t;if(Array.isArray(t)){var a="";return t.forEach((function(t){a+=e(t,n)})),a}var i={type:t.type,content:e(t.content,n),tag:"span",classes:["token",t.type],attributes:{},language:n},s=t.alias;s&&(Array.isArray(s)?Array.prototype.push.apply(i.classes,s):i.classes.push(s)),r.hooks.run("wrap",i);var o="";for(var l in i.attributes)o+=" "+l+'="'+(i.attributes[l]||"").replace(/"/g,"&quot;")+'"';return"<"+i.tag+' class="'+i.classes.join(" ")+'"'+o+">"+i.content+"</"+i.tag+">"},!e.document)return e.addEventListener?(r.disableWorkerMessageHandler||e.addEventListener("message",(function(t){var n=JSON.parse(t.data),a=n.language,i=n.code,s=n.immediateClose;e.postMessage(r.highlight(i,r.languages[a],a)),s&&e.close()}),!1),r):r;var g=r.util.currentScript();function d(){r.manual||r.highlightAll()}if(g&&(r.filename=g.src,g.hasAttribute("data-manual")&&(r.manual=!0)),!r.manual){var p=document.readyState;"loading"===p||"interactive"===p&&g&&g.defer?document.addEventListener("DOMContentLoaded",d):window.requestAnimationFrame?window.requestAnimationFrame(d):window.setTimeout(d,16)}return r}("undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{});e.exports&&(e.exports=a),void 0!==n.g&&(n.g.Prism=a),a.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},a.languages.markup.tag.inside["attr-value"].inside.entity=a.languages.markup.entity,a.languages.markup.doctype.inside["internal-subset"].inside=a.languages.markup,a.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(a.languages.markup.tag,"addInlined",{value:function(e,t){var n={};n["language-"+t]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:a.languages[t]},n.cdata=/^<!\[CDATA\[|\]\]>$/i;var r={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:n}};r["language-"+t]={pattern:/[\s\S]+/,inside:a.languages[t]};var i={};i[e]={pattern:RegExp("(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[^])*?(?=</__>)".replace(/__/g,(function(){return e})),"i"),lookbehind:!0,greedy:!0,inside:r},a.languages.insertBefore("markup","cdata",i)}}),Object.defineProperty(a.languages.markup.tag,"addAttribute",{value:function(e,t){a.languages.markup.tag.inside["special-attr"].push({pattern:RegExp("(^|[\"'\\s])(?:"+e+")\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))","i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[t,"language-"+t],inside:a.languages[t]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),a.languages.html=a.languages.markup,a.languages.mathml=a.languages.markup,a.languages.svg=a.languages.markup,a.languages.xml=a.languages.extend("markup",{}),a.languages.ssml=a.languages.xml,a.languages.atom=a.languages.xml,a.languages.rss=a.languages.xml,function(e){var t=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:RegExp("@[\\w-](?:[^;{\\s\"']|\\s+(?!\\s)|"+t.source+")*?(?:;|(?=\\s*\\{))"),inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+t.source+"|(?:[^\\\\\r\n()\"']|\\\\[^])*)\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+t.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+t.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:t,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var n=e.languages.markup;n&&(n.tag.addInlined("style","css"),n.tag.addAttribute("style","css"))}(a),a.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},a.languages.javascript=a.languages.extend("clike",{"class-name":[a.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp("(^|[^\\w$])(?:NaN|Infinity|0[bB][01]+(?:_[01]+)*n?|0[oO][0-7]+(?:_[0-7]+)*n?|0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?|\\d+(?:_\\d+)*n|(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?)(?![\\w$])"),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),a.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,a.languages.insertBefore("javascript","keyword",{regex:{pattern:RegExp("((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/(?:(?:\\[(?:[^\\]\\\\\r\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\r\n])+/[dgimyus]{0,7}|(?:\\[(?:[^[\\]\\\\\r\n]|\\\\.|\\[(?:[^[\\]\\\\\r\n]|\\\\.|\\[(?:[^[\\]\\\\\r\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\r\n])+/[dgimyus]{0,7}v[dgimyus]{0,7})(?=(?:\\s|/\\*(?:[^*]|\\*(?!/))*\\*/)*(?:$|[\r\n,.;:})\\]]|//))"),lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:a.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:a.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:a.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:a.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:a.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),a.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:a.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),a.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),a.languages.markup&&(a.languages.markup.tag.addInlined("script","javascript"),a.languages.markup.tag.addAttribute("on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)","javascript")),a.languages.js=a.languages.javascript,a.languages.json={property:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,lookbehind:!0,greedy:!0},string:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,lookbehind:!0,greedy:!0},comment:{pattern:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},number:/-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,punctuation:/[{}[\],]/,operator:/:/,boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"}},a.languages.webmanifest=a.languages.json,function(e){function t(e,t){return"___"+e.toUpperCase()+t+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(n,a,r,i){if(n.language===a){var s=n.tokenStack=[];n.code=n.code.replace(r,(function(e){if("function"==typeof i&&!i(e))return e;for(var r,o=s.length;-1!==n.code.indexOf(r=t(a,o));)++o;return s[o]=e,r})),n.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(n,a){if(n.language===a&&n.tokenStack){n.grammar=e.languages[a];var r=0,i=Object.keys(n.tokenStack);!function s(o){for(var l=0;l<o.length&&!(r>=i.length);l++){var c=o[l];if("string"==typeof c||c.content&&"string"==typeof c.content){var u=i[r],g=n.tokenStack[u],d="string"==typeof c?c:c.content,p=t(a,u),f=d.indexOf(p);if(f>-1){++r;var h=d.substring(0,f),m=new e.Token(a,e.tokenize(g,n.grammar),"language-"+a,g),y=d.substring(f+p.length),v=[];h&&v.push.apply(v,s([h])),v.push(m),y&&v.push.apply(v,s([y])),"string"==typeof c?o.splice.apply(o,[l,1].concat(v)):c.content=v}}else c.content&&s(c.content)}return o}(n.tokens)}}}})}(a),function(e){var t=e.util.clone(e.languages.javascript),n="(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})";function a(e,t){return e=e.replace(/<S>/g,(function(){return"(?:\\s|//.*(?!.)|/\\*(?:[^*]|\\*(?!/))\\*/)"})).replace(/<BRACES>/g,(function(){return"(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})"})).replace(/<SPREAD>/g,(function(){return n})),RegExp(e,t)}n=a(n).source,e.languages.jsx=e.languages.extend("markup",t),e.languages.jsx.tag.pattern=a("</?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>"),e.languages.jsx.tag.inside.tag.pattern=/^<\/?[^\s>\/]*/,e.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/,e.languages.jsx.tag.inside.tag.inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,e.languages.jsx.tag.inside.comment=t.comment,e.languages.insertBefore("inside","attr-name",{spread:{pattern:a("<SPREAD>"),inside:e.languages.jsx}},e.languages.jsx.tag),e.languages.insertBefore("inside","special-attr",{script:{pattern:a("=<BRACES>"),alias:"language-javascript",inside:{"script-punctuation":{pattern:/^=(?=\{)/,alias:"punctuation"},rest:e.languages.jsx}}},e.languages.jsx.tag);var r=function(e){return e?"string"==typeof e?e:"string"==typeof e.content?e.content:e.content.map(r).join(""):""},i=function(t){for(var n=[],a=0;a<t.length;a++){var s=t[a],o=!1;if("string"!=typeof s&&("tag"===s.type&&s.content[0]&&"tag"===s.content[0].type?"</"===s.content[0].content[0].content?n.length>0&&n[n.length-1].tagName===r(s.content[0].content[1])&&n.pop():"/>"===s.content[s.content.length-1].content||n.push({tagName:r(s.content[0].content[1]),openedBraces:0}):n.length>0&&"punctuation"===s.type&&"{"===s.content?n[n.length-1].openedBraces++:n.length>0&&n[n.length-1].openedBraces>0&&"punctuation"===s.type&&"}"===s.content?n[n.length-1].openedBraces--:o=!0),(o||"string"==typeof s)&&n.length>0&&0===n[n.length-1].openedBraces){var l=r(s);a<t.length-1&&("string"==typeof t[a+1]||"plain-text"===t[a+1].type)&&(l+=r(t[a+1]),t.splice(a+1,1)),a>0&&("string"==typeof t[a-1]||"plain-text"===t[a-1].type)&&(l=r(t[a-1])+l,t.splice(a-1,1),a--),t[a]=new e.Token("plain-text",l,null,l)}s.content&&"string"!=typeof s.content&&i(s.content)}};e.hooks.add("after-tokenize",(function(e){"jsx"!==e.language&&"tsx"!==e.language||i(e.tokens)}))}(a),function(e){e.languages.typescript=e.languages.extend("javascript",{"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,lookbehind:!0,greedy:!0,inside:null},builtin:/\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/}),e.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/,/\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,/\btype\b(?=\s*(?:[\{*]|$))/),delete e.languages.typescript.parameter,delete e.languages.typescript["literal-property"];var t=e.languages.extend("typescript",{});delete t["class-name"],e.languages.typescript["class-name"].inside=t,e.languages.insertBefore("typescript","function",{decorator:{pattern:/@[$\w\xA0-\uFFFF]+/,inside:{at:{pattern:/^@/,alias:"operator"},function:/^[\s\S]+/}},"generic-function":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,greedy:!0,inside:{function:/^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:t}}}}),e.languages.ts=e.languages.typescript}(a),function(e){var t=e.util.clone(e.languages.typescript);e.languages.tsx=e.languages.extend("jsx",t),delete e.languages.tsx.parameter,delete e.languages.tsx["literal-property"];var n=e.languages.tsx.tag;n.pattern=RegExp("(^|[^\\w$]|(?=</))(?:"+n.pattern.source+")",n.pattern.flags),n.lookbehind=!0}(a),function(){if(void 0!==a&&"undefined"!=typeof document){var e=[];s((function(e){if(e&&e.meta&&e.data){if(e.meta.status&&e.meta.status>=400)return"Error: "+(e.data.message||e.meta.status);if("string"==typeof e.data.content)return"function"==typeof atob?atob(e.data.content.replace(/\s/g,"")):"Your browser cannot decode base64"}return null}),"github"),s((function(e,t){if(e&&e.meta&&e.data&&e.data.files){if(e.meta.status&&e.meta.status>=400)return"Error: "+(e.data.message||e.meta.status);var n=e.data.files,a=t.getAttribute("data-filename");if(null==a)for(var r in n)if(n.hasOwnProperty(r)){a=r;break}return void 0!==n[a]?n[a].content:"Error: unknown or missing gist file "+a}return null}),"gist"),s((function(e){return e&&e.node&&"string"==typeof e.data?e.data:null}),"bitbucket");var t=0,n="data-jsonp-status",r="failed",i='pre[data-jsonp]:not([data-jsonp-status="loaded"]):not([data-jsonp-status="loading"])';a.hooks.add("before-highlightall",(function(e){e.selector+=", "+i})),a.hooks.add("before-sanity-check",(function(s){var o,l=s.element;if(l.matches(i)){s.code="",l.setAttribute(n,"loading");var c=l.appendChild(document.createElement("CODE"));c.textContent="Loading…";var u=s.language;c.className="language-"+u;var g=a.plugins.autoloader;g&&g.loadLanguages(u);var d=l.getAttribute("data-adapter"),p=null;if(d){if("function"!=typeof window[d])return l.setAttribute(n,r),void(c.textContent=(o=d,'✖ Error: JSONP adapter function "'+o+"\" doesn't exist"));p=window[d]}var f=l.getAttribute("data-jsonp");!function(i,s,o,u){var g="prismjsonp"+t++,d=document.createElement("a");d.href=i,d.href+=(d.search?"&":"?")+(s||"callback")+"="+g;var f=document.createElement("script");f.src=d.href,f.onerror=function(){m(),u()};var h=setTimeout((function(){m(),u()}),a.plugins.jsonphighlight.timeout);function m(){clearTimeout(h),document.head.removeChild(f),delete window[g]}window[g]=function(t){m(),function(t){var i=null;if(p)i=p(t,l);else for(var s=0,o=e.length;s<o&&null===(i=e[s].adapter(t,l));s++);null===i?(l.setAttribute(n,r),c.textContent="✖ Error: Cannot parse response (perhaps you need an adapter function?)"):(l.setAttribute(n,"loaded"),c.textContent=i,a.highlightElement(c))}(t)},document.head.appendChild(f)}(f,l.getAttribute("data-callback"),0,(function(){l.setAttribute(n,r),c.textContent="✖ Error: Timeout loading "+f}))}})),a.plugins.jsonphighlight={timeout:5e3,registerAdapter:s,removeAdapter:function(t){if("string"==typeof t&&(t=o(t)),"function"==typeof t){var n=e.findIndex((function(e){return e.adapter===t}));n>=0&&e.splice(n,1)}},highlight:function(e){for(var t,n=(e||document).querySelectorAll(i),r=0;t=n[r++];)a.highlightElement(t)}}}function s(t,n){n=n||t.name,"function"!=typeof t||o(t)||o(n)||e.push({adapter:t,name:n})}function o(t){if("function"==typeof t){for(var n=0;a=e[n++];)if(a.adapter.valueOf()===t.valueOf())return a.adapter}else if("string"==typeof t){var a;for(n=0;a=e[n++];)if(a.name===t)return a.adapter}return null}}()}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,n),i.exports}n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),function(){"use strict";function e(e){if(e.innerHTML){if(e.innerHTML.indexOf("**")>-1&&e.innerHTML.match(/\*\*/g).length>=2){var t=e.innerHTML,n=t.match(/\*\*/g).length;for(let a=0;a<Math.floor(n/2);a++)t=t.replace("**",'<span class="b">').replace("**","</span>"),e.innerHTML=t}Array.from(e.childNodes).map((e=>{""==e.innerHTML&&"b"==e.className&&(e.outerHTML="****")}))}return e}n(103);window.Markdown=class{constructor(e){this.entry=document.querySelector(e),this.cache=[],this.cacheIndex=-1,this.lastEdit,this.analysed=function(){};var t=this.entry;t.setAttribute("contenteditable","true"),t.className="editor __markdown__",t.innerHTML='<div class="section"></div>',t.focus(),t.addEventListener("paste",(function(e){e.preventDefault();var t=(e.originalEvent||e).clipboardData.getData("text/plain");document.execCommand("insertText",!1,t)})),t.addEventListener("dragover",(e=>{e.preventDefault()})),t.addEventListener("keydown",(e=>{e.ctrlKey&&66==e.keyCode&&e.preventDefault(),e.ctrlKey&&90==e.keyCode&&e.preventDefault(),setTimeout((()=>{let n=window.getSelection().getRangeAt(0);8==e.keyCode&&0==t.querySelectorAll(".section").length&&(t.innerHTML='<div class="section"></div>'),e.ctrlKey&&66==e.keyCode&&function(e){const t=e.startOffset,n=e.endOffset,a=e.startContainer.wholeText;if(e.startContainer==e.endContainer){const r=a.slice(0,t)+"**"+a.slice(t,n)+"**"+a.slice(n,a.length);e.startContainer.nodeValue=r,e.setStart(e.startContainer,t+2),e.setEnd(e.startContainer,t+2+a.slice(t,n).length)}else{const r=e.endContainer.wholeText;e.startContainer.nodeValue=a.slice(0,e.startOffset)+"**"+a.slice(e.startOffset,a.length),e.endContainer.nodeValue=r.slice(0,e.endOffset)+"**"+r.slice(e.endOffset,r.length),e.setStart(e.startContainer,t+2),e.setEnd(e.endContainer,n)}}(n),e.ctrlKey&&90==e.keyCode?this.undo():(this.analysed(this.render(t)),this.saveCache())}),10)})),t.addEventListener("mouseup",(e=>{setTimeout((()=>{this.saveCache()}),10)})),this.saveCache(!0)}onAnalysed(e){this.analysed=e}render(t){if("string"==typeof t){const e=document.createElement("div");t.split("\n").map((t=>{const n=document.createElement("div");n.innerText=t,e.append(n)})),t=e}let n=Array.from(t.cloneNode(!0).childNodes);n=function(e){let t=[];for(let n=0;n<e.length;n++){let a=e[n];if(a instanceof HTMLDivElement&&"```"==a.innerText.slice(0,3)){let r=a.innerText.slice(3).replace(" ","").replace("\n","").replace("\r",""),i="";for(let t=n+1;t<e.length;t++){let a=e[t];if("```"==a.innerText.slice(0,3))break;n++,i+=a.innerText.replace(/\n/,"")+"\n"}n++;let s=document.createElement("code");Prism.languages[r]||(r="jsx");const o=Prism.highlight(i,Prism.languages[r.replace("\r","")],r);s.innerHTML=o;const l=document.createElement("pre");l.append(s),t.push(l)}else t.push(a)}return t}(n),n=n.map((t=>(t=e(t=function(e){if(e.innerHTML&&e.innerHTML.indexOf("`")>-1&&e.innerHTML.match(/`/g).length>=2){var t=e.innerHTML,n=t.match(/`/g).length;for(let a=0;a<Math.floor(n/2);a++)t=t.replace(/`/,'<span class="ref">').replace(/`/,"</span>"),e.innerHTML=t}return e}(t=function(e){return e.innerHTML&&"&gt; "==e.innerHTML.slice(0,5)&&(e.className="reference",e.innerHTML=e.innerHTML.slice(4)),e}(t=function(e){if(e.innerHTML){if("###### "==e.innerHTML.slice(0,7)){const t=e.innerHTML.slice(6);(e=document.createElement("h6")).innerHTML=t}if("##### "==e.innerHTML.slice(0,6)){const t=e.innerHTML.slice(5);(e=document.createElement("h5")).innerHTML=t}if("#### "==e.innerHTML.slice(0,5)){const t=e.innerHTML.slice(4);(e=document.createElement("h4")).innerHTML=t}if("### "==e.innerHTML.slice(0,4)){const t=e.innerHTML.slice(3);(e=document.createElement("h3")).innerHTML=t}if("## "==e.innerHTML.slice(0,3)){const t=e.innerHTML.slice(2);(e=document.createElement("h2")).innerHTML=t}if("# "==e.innerHTML.slice(0,2)){const t=e.innerHTML.slice(1);(e=document.createElement("h1")).innerHTML=t}}return e}(t=function(e){return e.innerHTML&&"***"==e.innerHTML.replace(/&nbsp;/g,"").replace(/ /g,"").replace(/\r/,"")&&(e.innerHTML="",e.className="splitLine"),e}(t))))),function(e){if(e.innerHTML){if(new RegExp(/\*/,"g"),e.innerHTML.indexOf("*")>-1&&e.innerHTML.match(/\*/g).length>=2){var t=e.innerHTML,n=t.match(/\*/g).length;for(let a=0;a<Math.floor(n/2);a++)t=t.replace("*",'<span class="i">').replace("*","</span>"),e.innerHTML=t}Array.from(e.childNodes).map((e=>{""==e.innerHTML&&"i"==e.className&&(e.outerHTML="**")}))}return e}(t=function(e){if(e.innerHTML){var t=e.innerHTML.replace(/\[.*\]\(.*\)/g,(function(e){let t=e.match(/\[.*\]/)[0].slice(1).slice(0,-1);return'<a href="'+e.match(/\(.*\)/)[0].slice(1).slice(0,-1)+'">'+t+"</a>"}));e.innerHTML=t}return e}(t=e(t))))));var a=document.createElement("div");return a.className="__markdown_result__",n.map((e=>{a.append(e)})),(e=>{const t=e.childNodes;for(let e=0;e<t.length;e++){let n=t[e];if(n.className="section","```"==n.innerText.slice(0,3)){n.className="section code start",n.innerHTML!=n.innerText&&(n.innerHTML=n.innerText);for(let n=e+1;n<t.length;n++){let a=t[n];if(a.className="section code","```"==a.innerText.slice(0,3)){a.className="section code end";break}e++}e++}else{if("###### "==n.innerHTML.slice(0,7)&&(n.className="section h6"),"##### "==n.innerHTML.slice(0,6)&&(n.className="section h5"),"#### "==n.innerHTML.slice(0,5)&&(n.className="section h4"),"### "==n.innerHTML.slice(0,4)&&(n.className="section h3"),"## "==n.innerHTML.slice(0,3)&&(n.className="section h2"),"# "==n.innerHTML.slice(0,2)&&(n.className="section h1"),n.innerText.indexOf("`")>-1&&n.innerText.match(/`/g).length>=2){let e=n.innerText,t="";for(;""!=e;){let n=e.indexOf("`");n>-1&&e.match(/`/g).length>=2?(t+=e.slice(0,n)+"<span>`",e=e.slice(n+1),n=e.indexOf("`"),t+=e.slice(0,n)+"`</span>",e=e.slice(n+1)):(t+=e,e="")}}"> "==n.innerText.slice(0,2)&&(n.className="section reference")}}})(t),a.outerHTML}setExmple(e){const t=document.createElement("div");e.split("\n").map((e=>{const n=document.createElement("div");n.innerText=e,t.append(n)})),this.entry.innerHTML=t.innerHTML,this.analysed(this.render(this.entry)),this.saveCache(!0)}getCursor(){const e=document.getSelection();if(0==e.rangeCount)return[];const t=e.getRangeAt(0),n=Array.from(this.entry.childNodes),a=t.endContainer.parentElement;let r,i;i=t.endOffset;for(let e=0;e<n.length;e++)if(a==n[e]){r=e;break}return[r,i]}saveCache(e){e&&(this.cacheIndex=-1,this.cache=[]);const t=this.entry.cloneNode(!0);this.lastEdit!=t.innerHTML?(this.lastEdit=t.innerHTML,this.cache.length-1>this.cacheIndex&&(this.cache=this.cache.slice(0,this.cacheIndex+1)),this.cache.push({node:t,position:this.getCursor()}),this.cacheIndex++):this.cache[this.cacheIndex].position=this.getCursor()}undo(){if(this.cacheIndex<=0)return;this.cacheIndex--;const e=this.cache[this.cacheIndex];this.entry.innerHTML=e.node.innerHTML,this.analysed(this.render(e.node));const t=this.entry.cloneNode(!0);this.lastEdit=t.innerHTML;const n=window.getSelection().getRangeAt(0);n.setStart(this.entry.childNodes[e.position[0]].childNodes[0],e.position[1]),n.setEnd(this.entry.childNodes[e.position[0]].childNodes[0],e.position[1])}}}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,